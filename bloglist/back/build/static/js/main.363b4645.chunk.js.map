{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","token","getAll","axios","get","then","response","data","create","newBlog","a","config","headers","Authorization","post","setToken","newToken","login","credentials","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","setTitle","setAuthor","url","setUrl","notification","setNotification","notify","setNotify","useEffect","blogService","blogAppUser","window","localStorage","getItem","JSON","stringify","handleLogin","event","preventDefault","loginService","setItem","catch","setTimeout","handleLogout","removeItem","handleBlogAddition","e","postedBlog","concat","console","log","className","onSubmit","type","name","value","onChange","target","onClick","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.363b4645.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title}: {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newBlog => {\n  const config = {\n    headers: {Authorization: token}\n  }\n\n  const response = await axios.post(baseUrl, newBlog, config)\n  return response.data\n}\n\nexport default { getAll, create, setToken }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default {login}","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [title, setTitle] = useState('')\n  const [author, setAuthor]= useState('')\n  const [url, setUrl] = useState('')\n  const [notification, setNotification] = useState('')\n  const [notify, setNotify] = useState(false)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  // on the first load get username from localStorage\n  useEffect(() => {\n    const blogAppUser = window.localStorage.getItem('blogAppUser')\n    if (blogAppUser) {\n      const user = JSON.stringify(blogAppUser)\n      setUser(user) \n    }\n  }, [])\n\n  // login user\n  const handleLogin = (event) => {\n    event.preventDefault()\n    // axios request \n      loginService\n        .login({\n          username, password\n        })\n        .then(user => {\n          // save user and its token to localStorage\n          window.localStorage.setItem('blogAppUser', JSON.stringify(user))\n          // this will set auth. headers to post request\n          blogService.setToken(user.token)\n          setUser(user)   \n          setUsername('')\n          setPassword('') \n        })\n        .catch(() => {\n          // notify if login failed\n            setNotification('wrong password or username')  \n            setNotify(true)\n            setTimeout(() => {\n              setNotify(false)\n            }, 4000)\n        })\n  }\n\n  // hadle log out function\n  const handleLogout = () => {    \n    window.localStorage.removeItem('blogAppUser')\n    setUser(null)\n  }\n\n  // handle adding blogs\n  const handleBlogAddition = (e) => {\n    e.preventDefault()\n\n\n    blogService\n      .create({title, author,url})\n      .then(postedBlog => {\n        // add new blog to the canvas\n        setBlogs(blogs.concat(postedBlog))\n        // make notification\n        setNotification('New blog is added')\n        setNotify(true)\n        setTimeout(() => {\n          setNotify(false)\n        }, 4000)\n\n      })\n      .catch(() => {\n        console.log('failed to add a blog')\n      })\n\n  }\n  const loginOrContent = () => {\n    if (user === null) {\n      return (\n        <div>   \n          <h2>Log in to application</h2>  \n          {\n            notify && <div className='notification'>{notification}</div>\n          }\n          <form onSubmit={handleLogin}>\n            <div>\n              username\n                <input\n                type='text'\n                name='username'\n                value={username}\n                onChange={({target}) => setUsername(target.value)}\n                />\n            </div>\n            <div>\n              password\n                <input\n                type='password'\n                name='password'\n                value={password}\n                onChange={({target}) => setPassword(target.value)}\n                />\n            </div>\n            <button type='submit'>login</button>\n          </form>\n        </div>\n      )\n    }\n    return (\n      <div>\n        <h2>blogs</h2>\n        {\n          notify && <div className='notification'>{notification}</div>\n        }        \n        <div>\n          {user.username} is logged-in\n          <button onClick={handleLogout}>Log out</button>          \n        </div>\n        <h2>Create New Blog</h2>\n        <form onSubmit={handleBlogAddition}>\n          <div>\n            title\n              <input\n              type='text'\n              name='title'\n              value={title}\n              onChange={({target}) => setTitle(target.value)}\n              />\n          </div>\n          <div>\n            author\n              <input\n              type='text'\n              name='author'\n              value={author}\n              onChange={({target}) => setAuthor(target.value)}\n              />\n          </div>\n          <div>\n            url\n              <input\n              type='text'\n              name='url'\n              value={url}\n              onChange={({target}) => setUrl(target.value)}\n              />\n          </div>\n          <button type='submit'>create</button>\n        </form>\n        {blogs.map(blog =>\n          <Blog key={blog.id} blog={blog} />\n        )}\n      </div>\n    )\n  }\n\n  return (\n    <>\n      {loginOrContent()}\n    </>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './App.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}